<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bruce.designer.dao.mapper.AlbumActionLogMapper">

	<resultMap id="CountCacheMap" type="com.bruce.designer.data.CountCacheBean">
	    <result column="data_id" jdbcType="INTEGER" property="member"/>
	    <result column="total_num" jdbcType="BIGINT" property="score"/>
    </resultMap>
    
	<!-- 专辑浏览数据统计，供重建数据使用 -->
	<select id="queryBrowseStat" resultMap="CountCacheMap">
		select album_id data_id, sum(browse_num) total_num from tb_album_action_log where status=1 and album_id>0  group by album_id;
	</select> 
	
	<!-- 专辑评论数据统计，供重建数据使用，转移到commentMapper.java中
	<select id="queryCommentList" resultMap="CountCacheMap">
		select album_id, count(album_id) total_num from tb_comment where status=1 group by album_id;
	</select>
	-->
	
	
	<!-- 查询截至现在每日热门专辑 -->
	<select id="realtimeDailyTopAlbums" resultMap="CountCacheMap" parameterType="com.bruce.designer.model.AlbumActionLogCriteria" >
		 <include refid="CountTopAlbumRule" /> where status=1 and album_id>0 and create_time>=DATE_SUB(now(), Interval 1 day) group by album_id order by total_num desc limit ${limit};
	</select>
	
	<!-- 查询截至现在每周热门专辑 -->
	<select id="realtimeWeeklyTopAlbums" resultMap="CountCacheMap" parameterType="com.bruce.designer.model.AlbumActionLogCriteria" >
		 <include refid="CountTopAlbumRule" /> where status=1 and album_id>0 and create_time>=DATE_SUB(now(), Interval 1 week) group by album_id order by total_num desc limit ${limit};
	</select>
	
	<!-- 查询截至现在每月热门专辑 -->
	<select id="realtimeMonthlyTopAlbums" resultMap="CountCacheMap" parameterType="com.bruce.designer.model.AlbumActionLogCriteria" >
		 <include refid="CountTopAlbumRule" /> where status=1 and album_id>0 and create_time>=DATE_SUB(now(), Interval 1 month) group by album_id order by total_num desc limit ${limit};
	</select>
	
	
	<!-- 查询截至现在每日热门设计师 -->
	<select id="realtimeDailyTopDesigners" resultMap="CountCacheMap" parameterType="com.bruce.designer.model.AlbumActionLogCriteria" >
		 <include refid="CountTopDesignerRule"/> where status=1 and designer_id>0 and create_time>=DATE_SUB(now(), Interval 1 day) group by designer_id order by total_num desc limit ${limit};
	</select>
	
	<!-- 查询截至现在每周热门设计师 -->
	<select id="realtimeWeeklyTopDesigners" resultMap="CountCacheMap" parameterType="com.bruce.designer.model.AlbumActionLogCriteria" >
		 <include refid="CountTopDesignerRule"/> where status=1 and designer_id>0 and create_time>=DATE_SUB(now(), Interval 1 week) group by designer_id order by total_num desc limit ${limit};
	</select>
	
	<!-- 查询截至现在每月热门设计师 -->
	<select id="realtimeMonthlyTopDesigners" resultMap="CountCacheMap" parameterType="com.bruce.designer.model.AlbumActionLogCriteria" >
		 <include refid="CountTopDesignerRule"/> where status=1 and designer_id>0 and create_time>=DATE_SUB(now(), Interval 1 month) group by designer_id order by total_num desc limit ${limit};
	</select>
	
	
	<sql id="CountTopAlbumRule">
    	select ${albumFavoriteScore}*sum(favorite_num) + ${albumLikeScore}*sum(like_num) + ${albumCommentScore}*sum(comment_num) + ${albumBrowseScore}*sum(browse_num) total_num, album_id data_id from tb_album_action_log
	</sql>
	
	<sql id="CountTopDesignerRule">
    	select ${designerFavoriteScore}*sum(favorite_num) + ${designerLikeScore}*sum(like_num) + ${designerCommentScore}*(comment_num) + ${designerBrowseScore}*sum(browse_num) total_num, album_id data_id from tb_album_action_log
	</sql>

</mapper>